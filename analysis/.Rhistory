staircase_df <- staircase_df %>%
pivot_longer(cols = c(validq1, validq2), names_to = 'staircase') %>%
rename(coherence = value)
# get info about which staircase generated which coherence
staircase_df <- read.csv('../data/tidied/staircases.csv') %>%
pivot_longer(cols = c(validq1, validq2), names_to = 'staircase') %>%
rename(coherence = value)
View(staircase_df)
# get info about which staircase generated which coherence
staircase_df <- read.csv('../data/tidied/staircases.csv') %>%
pivot_longer(cols = c(validq1, validq2), names_to = 'staircase') %>%
mutate(staircase = ifelse(staircase=='validq1', 'stair1', 'stair2')) %>%
rename(coherence = value)
View(staircase_df)
626*2
View(staircase_df)
staircase_df %>% group_by(subID, staircase) %>% count()
# get info about which staircase generated which coherence
staircase_df <- read.csv('../data/tidied/staircases.csv') %>%
pivot_longer(cols = c(validq1, validq2), names_to = 'staircase') %>%
rename(coherence = value)
# get info about which staircase generated which coherence
staircase_df <- read.csv('../data/tidied/staircases.csv') %>%
pivot_longer(cols = c(stair1, stair2), names_to = 'staircase') %>%
rename(coherence = value)
View(staircase_df)
# merge staircase info into calibration df
calibration_df <- calibration_df %>%
left_join(., staircase_df, by=c(subID, trial, targetIdx))
# merge staircase info into calibration df
calibration_df <- calibration_df %>%
left_join(., staircase_df, by=c('subID', 'trial', 'targetIdx'))
View(calibration_df)
# merge staircase info into calibration df
calibration_df <- calibration_df %>%
left_join(., staircase_df, by=c('subID', 'trial', 'targetIdx', 'coherence'))
?join
calibration_files = list.files('../data', full.names = TRUE, pattern='block1_calibration.csv', recursive = T)
calibration_keep_idx <- grep('excluded', calibration_files, invert=T)
calibration_df = do.call(rbind, lapply(calibration_files[calibration_keep_idx], function(x) { read.csv(x, header = TRUE)} ))
# merge staircase info into calibration df
staircase_df <- staircase_df %>%
inner_join(., calibration_df)
# get info about which staircase generated which coherence
staircase_df <- read.csv('../data/tidied/staircases.csv') %>%
pivot_longer(cols = c(stair1, stair2), names_to = 'staircase') %>%
rename(coherence = value)
View(staircase_df)
View(calibration_df)
View(staircase_df)
# get info about which staircase generated which coherence
staircase_df <- read.csv('../data/tidied/staircases.csv') %>%
pivot_longer(cols = c(stair1, stair2), names_to = 'staircase') %>%
rename(coherence = value) %>%
mutate(coherence = round(coherence, 2))
View(staircase_df)
# merge staircase info into calibration df
staircase_df <- staircase_df %>%
inner_join(., calibration_df)
View(staircase_df)
# get info about which staircase generated which coherence
staircase_df <- read.csv('../data/tidied/staircases.csv') %>%
pivot_longer(cols = c(stair1, stair2), names_to = 'staircase') %>%
rename(coherence = value) %>%
mutate(coherence = round(coherence, 2)) %>%
select(-c(trial))
# merge staircase info into calibration df
staircase_df <- staircase_df %>%
inner_join(., calibration_df)
View(staircase_df)
# get info about which staircase generated which coherence
staircase_df <- read.csv('../data/tidied/staircases.csv') %>%
pivot_longer(cols = c(stair1, stair2), names_to = 'staircase') %>%
rename(coherence = value) %>%
mutate(coherence = round(coherence, 2)) %>%
select(-c(trial))
View(staircase_df)
# get info about which staircase generated which coherence
staircase_df <- read.csv('../data/tidied/staircases.csv') %>%
pivot_longer(cols = c(stair1, stair2), names_to = 'staircase') %>%
rename(coherence = value) %>%
mutate(coherence = round(coherence, 2))
View(staircase_df)
staircase_df %>%
ggplot(aes(x=trial, y=coherence, color=staircase)) +
facet_wrap(targetIdx ~ subID)
staircase_df %>%
ggplot(aes(x=trial, y=coherence, color=staircase)) +
facet_wrap(subID ~ targetIdx)
staircase_df %>%
ggplot(aes(x=trial, y=coherence, color=staircase)) +
facet_wrap(subID ~ targetIdx) +
geom_line()
staircase_df %>%
ggplot(aes(x=trial, y=coherence, color=staircase)) +
facet_wrap(subID ~ targetIdx) +
geom_line() +
theme_bw()
staircase_df %>%
ggplot(aes(x=trial, y=coherence, color=staircase)) +
facet_wrap(subID ~ targetIdx, ncol=2) +
geom_line() +
theme_bw()
staircase_df %>%
ggplot(aes(x=trial, y=coherence, color=staircase)) +
facet_wrap(subID ~ targetIdx, ncol=4) +
geom_line() +
theme_bw()
staircase_df %>%
ggplot(aes(x=trial, y=coherence, color=staircase)) +
facet_wrap(subID ~ targetIdx, ncol=4) +
geom_line() +
theme_bw() +
geom_hline(yintercept = 0.7)
staircase_df %>%
mutate(subID = paste0('sub', subID),
targetIdx = paste0('img')) %>%
ggplot(aes(x=trial, y=coherence, color=staircase)) +
facet_wrap(subID ~ targetIdx, ncol=4) +
geom_line() +
theme_bw() +
geom_hline(yintercept = 0.7)
staircase_df %>%
mutate(subID = paste0('sub', subID),
targetIdx = paste0('img', targetIdx)) %>%
ggplot(aes(x=trial, y=coherence, color=staircase)) +
facet_wrap(subID ~ targetIdx, ncol=4) +
geom_line() +
theme_bw() +
geom_hline(yintercept = 0.7)
1. what do the staircases look like during calibration?
learning_files = list.files('../data', full.names = TRUE, pattern='block1_learning.csv', recursive = T)
learning_keep_idx <- grep('excluded', learning_files, invert=T)
learning_df = do.call(rbind, lapply(learning_files[learning_keep_idx], function(x) { read.csv(x, header = TRUE)} ))
# load calibrated coherences
calibrated_coherence <- read.csv('../data/tidied/staircases.csv')
View(calibrated_coherence)
# load calibrated coherences
calibrated_coherence <- read.csv('../data/tidied/calibrated_coherence.csv')
# load calibrated coherences
calibrated_coherence <- read.csv('../data/tidied/calibrated_coherence.csv')
# load calibrated coherences
calibrated_coherence <- read.csv('../data/tidied/calibrated_coherence.csv')
kable(calibrated_coherence)
library(knitr)
kable(calibrated_coherence)
# get info about which staircase generated which coherence
staircase_df <- read.csv('../data/tidied/staircases.csv') %>%
pivot_longer(cols = c(stair1, stair2), names_to = 'staircase') %>%
rename(coherence = value) %>%
mutate(coherence = round(coherence, 2))
staircase_df %>%
mutate(subID = paste0('sub', subID),
targetIdx = paste0('img', targetIdx)) %>%
ggplot(aes(x=trial, y=coherence, color=staircase)) +
facet_wrap(subID ~ targetIdx, ncol=4) +
geom_line() +
theme_bw() +
geom_hline(yintercept = 0.7)
View(staircase_df)
# get info about which staircase generated which coherence
staircase_df <- read.csv('../data/tidied/staircases.csv') %>%
pivot_longer(cols = c(stair1, stair2), names_to = 'staircase') %>%
rename(coherence = value) %>%
mutate(coherence = round(coherence, 2))
staircase_df %>%
mutate(subID = paste0('sub', subID),
targetIdx = paste0('img', imgPath)) %>%
ggplot(aes(x=trial, y=coherence, color=staircase)) +
facet_wrap(subID ~ targetIdx, ncol=4) +
geom_line() +
theme_bw() +
geom_hline(yintercept = 0.7)
View(learning_df)
learning_df %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID) +
stat_summary(fun.data='mean', geom='bar')
learning_df %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID) +
stat_summary(fun='mean', geom='bar')
learning_df %>% group_by(subID, imageIdx) %>%
summarise(accuracy = mean(accuracy))
kable(learning_df %>% group_by(subID, imageIdx) %>%
summarise(accuracy = mean(accuracy)))
learning_df %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID) +
stat_summary(fun='mean', geom='bar') +
ylim(0.65, 1)
learning_df %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID) +
stat_summary(fun='mean', geom='bar') +
ylim(0.65, 1.1)
learning_df %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID) +
stat_summary(fun='mean', geom='bar') +
ylim(0.5, 1.1)
learning_df %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID) +
stat_summary(fun='mean', geom='bar')
learning_df %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID) +
stat_summary(fun='mean', geom='point')
learning_df %>%
mutate(imageIdx = factor(imageIdx)) %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID) +
stat_summary(fun='mean', geom='point')
learning_df %>%
mutate(imageIdx = factor(imageIdx)) %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID) +
stat_summary(fun='mean', geom='point') +
ylim(0.65, 1)
learning_df %>%
mutate(imageIdx = factor(imageIdx)) %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID) +
stat_summary(fun='mean', geom='point') +
ylim(0.65, 1.5)
learning_df %>%
mutate(imageIdx = factor(imageIdx)) %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID) +
stat_summary(fun='mean', geom='point') +
ylim(0.65, 1.1)
learning_df %>%
mutate(imageIdx = factor(imageIdx)) %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID) +
stat_summary(fun='mean', geom='point') +
ylim(0.65, 1.01)
learning_df %>%
mutate(imageIdx = factor(imageIdx)) %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID) +
stat_summary(fun='mean', geom='point')
learning_df %>%
mutate(imageIdx = factor(imageIdx)) %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID) +
stat_summary(fun='mean', geom='point')
learning_df %>%
mutate(imageIdx = factor(imageIdx)) %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID) +
stat_summary(fun='mean', geom='point') +
geom_hline(yintercept = 0.8, linetype='dashed')
learning_df %>%
mutate(imageIdx = factor(imageIdx)) %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID) +
stat_summary(fun='mean', geom='point') +
geom_hline(yintercept = 0.8, linetype='dashed') +
geom_text(
label=accuracy,
check_overlap=T)
learning_df %>%
mutate(imageIdx = factor(imageIdx)) %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID, ncol=3) +
stat_summary(fun='mean', geom='point') +
geom_hline(yintercept = 0.8, linetype='dashed') +
```
learning_df %>%
mutate(imageIdx = factor(imageIdx)) %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID, ncol=3) +
stat_summary(fun='mean', geom='point') +
geom_hline(yintercept = 0.8, linetype='dashed')
learning_df %>%
mutate(imageIdx = factor(imageIdx)) %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_wrap(~ subID, ncol=2) +
stat_summary(fun='mean', geom='point') +
geom_hline(yintercept = 0.8, linetype='dashed')
learning_df %>%
mutate(imageIdx = factor(imageIdx)) %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_grid(~ subID) +
stat_summary(fun='mean', geom='point') +
geom_hline(yintercept = 0.8, linetype='dashed')
learning_df %>%
mutate(imageIdx = factor(imageIdx)) %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_grid(~ subID) +
stat_summary(fun='mean', geom='point') +
geom_hline(yintercept = 0.8, linetype='dashed') +
theme(text = element_text(size=14))
learning_df %>%
mutate(imageIdx = factor(imageIdx)) %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_grid(~ subID) +
stat_summary(fun='mean', geom='point', size=3) +
geom_hline(yintercept = 0.8, linetype='dashed') +
theme(text = element_text(size=14))
?scale_y_continuous
learning_df %>%
mutate(imageIdx = factor(imageIdx)) %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_grid(~ subID) +
stat_summary(fun='mean', geom='point', size=3) +
geom_hline(yintercept = 0.8, linetype='dashed') +
scale_y_continuous(n.breaks=6)
learning_df %>%
mutate(imageIdx = factor(imageIdx)) %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_grid(~ subID) +
stat_summary(fun='mean', geom='point', size=3) +
geom_hline(yintercept = 0.8, linetype='dashed') +
scale_y_continuous(n.breaks=6) +
theme(text = element_text(size=14))
learning_df %>%
mutate(imageIdx = factor(imageIdx),
cueIdx = factor(cueIdx)) %>%
ggplot(aes(x=imageIdx, y=RT, color=cueIdx)) +
theme_bw() +
facet_grid(~ subID) +
stat_summary(fun='mean', geom='point', size=3)
learning_df %>%
mutate(imageIdx = factor(imageIdx),
cueIdx = factor(cueIdx)) %>%
ggplot(aes(x=imageIdx, y=RT, color=cueIdx)) +
theme_bw() +
facet_grid(~ subID) +
stat_summary(fun='mean', geom='point', size=3) +
geom_hline(yintercept = 0.8, linetype='dashed') +
scale_y_continuous(n.breaks=8) +
theme(text = element_text(size=14))
learning_df %>%
mutate(imageIdx = factor(imageIdx),
cueIdx = factor(cueIdx)) %>%
ggplot(aes(x=trial, y=RT, color=cueIdx)) +
theme_bw() +
facet_grid(~ subID) +
stat_summary(fun='mean', geom='point', size=3) +
geom_hline(yintercept = 0.8, linetype='dashed') +
scale_y_continuous(n.breaks=8) +
theme(text = element_text(size=14))
View(learning_df)
learning_df <- learning_df %>%
group_by(subID) %>%
mutate(logRT = log(RT),
zlogRT = scale(logRT))
View(learning_df)
m <- lm(zlogRT ~ cueIdx * trial, learning_df)
summary(m)
m <- lm(zlogRT ~ cueIdx + trial, learning_df)
summary(m)
m <- lm(zlogRT ~ cueIdx + trial, learning_df, contrasts = list(cueIdx=contr.sum))
learning_df <- learning_df %>%
group_by(subID) %>%
mutate(logRT = log(RT),
zlogRT = scale(logRT),
cueIdx = factor(cueIdx))
m <- lm(zlogRT ~ cueIdx + trial, learning_df, contrasts = list(cueIdx=contr.sum))
summary(m)
ggplot(learning_df, aes(x=trial, y=RT, color=cueIdx)) +
geom_point()
ggplot(learning_df, aes(x=trial, y=zlogRT, color=cueIdx)) +
geom_point()
ggplot(learning_df, aes(x=trial, y=zlogRT, color=cueIdx)) +
geom_point() +
theme_bw()
mean(learning_df$zlogRT)
mean(learning_df$zlogRT, na.rm=T)
-1.298024e-16
min(learning_df$zlogRT)
min(learning_df$zlogRT, na.rm=T)
max(learning_df$zlogRT, na.rm=T)
mean(learning_df$RT)
mean(learning_df$RT, na.rm=T)
m <- lm(RT ~ cueIdx + trial, learning_df, contrasts = list(cueIdx=contr.sum))
summary(m)
learning_df %>%
ggplot(aes(x=trial, y=zlogRT)) +
facet_grid(~ subID)
learning_df %>%
ggplot(aes(x=trial, y=zlogRT)) +
facet_grid(~ subID) +
geom_point()
learning_df %>%
ggplot(aes(x=trial, y=zlogRT, color=cueIdx)) +
facet_grid(~ subID) +
geom_point()
learning_df %>%
ggplot(aes(x=trial, y=zlogRT, color=cueIdx)) +
facet_grid(~ subID) +
geom_point() +
geom_smooth(method = 'lm')
learning_df %>%
ggplot(aes(x=trial, y=zlogRT, color=cueIdx)) +
facet_wrap(~ subID) +
geom_point() +
geom_smooth(method = 'lm')
learning_df %>%
ggplot(aes(x=trial, y=zlogRT, color=cueIdx)) +
facet_wrap(~ subID, ncol=2) +
geom_point() +
geom_smooth(method = 'lm')
learning_df %>%
ggplot(aes(x=trial, y=zlogRT, color=cueIdx)) +
facet_wrap(~ subID, ncol=3) +
geom_point() +
geom_smooth(method = 'lm')
learning_df %>%
ggplot(aes(x=trial, y=zlogRT, color=cueIdx)) +
theme_bw() +
geom_hline(yintercept = 0, linetype='dashed') +
facet_wrap(~ subID, ncol=3) +
geom_point() +
geom_smooth(method = 'lm')
learning_df %>%
ggplot(aes(x=trial, y=zlogRT, color=cueIdx)) +
theme_bw() +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point() +
geom_smooth(method = 'lm')
learning_df %>%
ggplot(aes(x=trial, y=zlogRT, color=cueIdx)) +
theme_bw() +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(alpha=0.5) +
geom_smooth(method = 'lm')
learning_df %>%
ggplot(aes(x=trial, y=zlogRT, color=cueIdx)) +
theme_bw() +
geom_hline(yintercept = 0, linetype='dashed') +
facet_wrap(~ subID, ncol=3) +
geom_point() +
geom_smooth(method = 'lm') +
labs(title = 'group summary')
learning_df %>%
ggplot(aes(x=trial, y=zlogRT, color=cueIdx)) +
theme_bw() +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(alpha=0.5) +
geom_smooth(method = 'lm') +
labs(title = 'group summary')
learning_df %>%
mutate(imageIdx = factor(imageIdx)) %>%
ggplot(aes(x=imageIdx, y=accuracy)) +
theme_bw() +
facet_grid(~ subID) +
stat_summary(fun='mean', geom='point', size=3) +
geom_hline(yintercept = 0.8, linetype='dashed') +
scale_y_continuous(n.breaks=6) +
theme(text = element_text(size=14))
View(calibrated_coherence)
# load calibrated coherences
calibrated_coherence <- read.csv('../data/tidied/calibrated_coherence.csv') %>%
mutate(img1 = round(img1, 2),
img2 = round(img2, 2))
learning_df %>%
ggplot(aes(x=trial, y=zlogRT, color=cueIdx)) +
theme_bw() +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(alpha=0.25) +
geom_smooth(method = 'lm') +
labs(title = 'group summary')
learning_df %>%
ggplot(aes(x=trial, y=zlogRT, color=cueIdx)) +
theme_bw() +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(alpha=0.25, size=1) +
geom_smooth(method = 'lm') +
labs(title = 'group summary')
?geom_smooth
learning_df %>%
ggplot(aes(x=trial, y=zlogRT, color=cueIdx)) +
theme_bw() +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(alpha=0.25, size=1) +
geom_smooth(method = 'lm', linewidth=2) +
labs(title = 'group summary')
learning_df %>%
ggplot(aes(x=trial, y=zlogRT, color=cueIdx)) +
theme_bw() +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(alpha=0.25, size=1) +
geom_smooth(method = 'lm', linewidth=1.5) +
labs(title = 'group summary')
