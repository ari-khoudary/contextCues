geom_jitter(data=inference_df, aes(y=accuracy), height = 0.05)
estimate_df %>%
ggplot(aes(estimate, yvar)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_line() +
geom_jitter(data=inference_df, aes(y=accuracy), height = 0.05, width=0.5)
estimate_df %>%
ggplot(aes(estimate, yvar)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_line() +
geom_jitter(data=inference_df, aes(y=accuracy), height = 0.05, width=0.2)
estimate_df %>%
ggplot(aes(estimate, yvar)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_line() +
geom_jitter(data=inference_df, aes(y=accuracy), height = 0.05, width=0.1)
estimate_df %>%
ggplot(aes(estimate, yvar)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_line() +
geom_jitter(data=inference_df, aes(y=accuracy), height = 0.05, width=0.05)
estimate_df %>%
ggplot(aes(estimate, yvar)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_line() +
geom_jitter(data=inference_df, aes(y=accuracy), height = 0.05, width=0.05, size=0.5)
estimate_df %>%
ggplot(aes(estimate, yvar)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_line() +
geom_jitter(data=inference_df, aes(y=accuracy, color=cueLabel), height = 0.05, width=0.05, size=0.5)
estimate_df %>%
ggplot(aes(estimate, yvar)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_line() +
geom_ribbon(aes(ymin=LCL, ymax=UCL), alpha=0.2)
estimate_df %>%
ggplot(aes(estimate, yvar)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_line() +
geom_ribbon(aes(ymin=LCL, ymax=UCL), alpha=0.2) +
geom_jitter(data=inference_df, aes(y=accuracy, color=cueLabel), height = 0.05, width=0.05, size=0.5)
estimate_df %>%
ggplot(aes(estimate, yvar)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_line() +
geom_ribbon(aes(ymin=LCL, ymax=UCL), alpha=0.2) +
geom_jitter(data=inference_df, aes(y=accuracy, color=cueLabel), height = 0.05, width=0.05, size=0.5) +
theme_bw()
labs(y = 'trial accuracy', title = 'choice accuracy predicted by estimated cue probabilities')
estimate_df %>%
ggplot(aes(estimate, yvar)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_line() +
geom_ribbon(aes(ymin=LCL, ymax=UCL), alpha=0.2) +
geom_jitter(data=inference_df, aes(y=accuracy, color=cueLabel), height = 0.05, width=0.05, size=0.5) +
theme_bw() +
labs(y = 'trial accuracy', title = 'choice accuracy predicted by estimated cue probabilities')
# plotting results
cue_df %>%
ggplot(aes(cueLabel, yvar, color=cueLabel, fill=cueLabel)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_col(alpha=0, linewidth=1.5) +
geom_errorbar(aes(ymin=LCL, ymax=UCL), color='black', width=0.1) +
theme_bw() +
labs(y = 'trial accuracy', title = 'choice accuracy predicted by objective cue probabilities')
p1 + p2 + plot_layout(guides='collect')
# plotting results
p1 <- cue_df %>%
ggplot(aes(cueLabel, yvar, color=cueLabel, fill=cueLabel)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_col(alpha=0, linewidth=1.5) +
geom_errorbar(aes(ymin=LCL, ymax=UCL), color='black', width=0.1) +
theme_bw() +
labs(y = 'trial accuracy', title = 'choice accuracy predicted by objective cue probabilities')
p2 <- estimate_df %>%
ggplot(aes(estimate, yvar)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_line() +
geom_ribbon(aes(ymin=LCL, ymax=UCL), alpha=0.2) +
geom_jitter(data=inference_df, aes(y=accuracy, color=cueLabel), height = 0.05, width=0.05, size=0.5) +
theme_bw() +
labs(y = 'trial accuracy', title = 'choice accuracy predicted by estimated cue probabilities')
p1 + p2 + plot_layout(guides='collect')
# plotting results
p1 <- cue_df %>%
ggplot(aes(cueLabel, yvar, color=cueLabel, fill=cueLabel)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_col(alpha=0, linewidth=1.5) +
geom_errorbar(aes(ymin=LCL, ymax=UCL), color='black', width=0.1) +
theme_bw() +
ylim(0, 1) +
labs(y = 'trial accuracy', title = 'choice accuracy predicted by objective cue probabilities',
subtitle = 'glm(accuracy ~ cueLabel)')
p1
cue_df %>%
ggplot(aes(cueLabel, yvar, color=cueLabel, fill=cueLabel)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_point(inference_df, aes(y=accuracy)) +
geom_col(alpha=0, linewidth=1.5) +
geom_errorbar(aes(ymin=LCL, ymax=UCL), color='black', width=0.1) +
theme_bw() +
ylim(0, 1) +
labs(y = 'trial accuracy', title = 'choice accuracy predicted by objective cue probabilities',
subtitle = 'glm(accuracy ~ cueLabel)')
cue_df %>%
ggplot(aes(cueLabel, yvar, color=cueLabel, fill=cueLabel)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_jitter(inference_df, aes(x=cueLabel, y=accuracy)) +
geom_col(alpha=0, linewidth=1.5) +
geom_errorbar(aes(ymin=LCL, ymax=UCL), color='black', width=0.1) +
theme_bw() +
ylim(0, 1) +
labs(y = 'trial accuracy', title = 'choice accuracy predicted by objective cue probabilities',
subtitle = 'glm(accuracy ~ cueLabel)')
cue_df %>%
ggplot(aes(cueLabel, yvar, color=cueLabel, fill=cueLabel)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_jitter(aes(x=cueLabel, y=accuracy), data=inference_df) +
geom_col(alpha=0, linewidth=1.5) +
geom_errorbar(aes(ymin=LCL, ymax=UCL), color='black', width=0.1) +
theme_bw() +
ylim(0, 1) +
labs(y = 'trial accuracy', title = 'choice accuracy predicted by objective cue probabilities',
subtitle = 'glm(accuracy ~ cueLabel)')
# plotting results
p1 <- cue_df %>%
ggplot(aes(cueLabel, yvar, color=cueLabel, fill=cueLabel)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_jitter(aes(x=cueLabel, y=accuracy), data=inference_df, height=0.05) +
geom_col(alpha=0, linewidth=1.5) +
geom_errorbar(aes(ymin=LCL, ymax=UCL), color='black', width=0.1) +
theme_bw() +
ylim(0, 1) +
labs(y = 'trial accuracy', title = 'choice accuracy predicted by objective cue probabilities',
subtitle = 'glm(accuracy ~ cueLabel)')
p1
# plotting results
p1 <- cue_df %>%
ggplot(aes(cueLabel, yvar, color=cueLabel, fill=cueLabel)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_jitter(aes(x=cueLabel, y=accuracy), data=inference_df, height=0.05, size=0.5) +
geom_col(alpha=0, linewidth=1.5) +
geom_errorbar(aes(ymin=LCL, ymax=UCL), color='black', width=0.1) +
theme_bw() +
ylim(0, 1) +
labs(y = 'trial accuracy', title = 'choice accuracy predicted by objective cue probabilities',
subtitle = 'glm(accuracy ~ cueLabel)')
p1
# plotting results
p1 <- cue_df %>%
ggplot(aes(cueLabel, yvar, color=cueLabel, fill=cueLabel)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_col(alpha=0, linewidth=1.5) +
geom_errorbar(aes(ymin=LCL, ymax=UCL), color='black', width=0.1) +
geom_jitter(aes(x=cueLabel, y=accuracy), data=inference_df, height=0.05, size=0.5) +
theme_bw() +
ylim(0, 1) +
labs(y = 'trial accuracy', title = 'choice accuracy predicted by objective cue probabilities',
subtitle = 'glm(accuracy ~ cueLabel)')
p1
# plotting results
p1 <- cue_df %>%
ggplot(aes(cueLabel, yvar, color=cueLabel, fill=cueLabel)) +
geom_hline(yintercept = 0.5, linetype='dashed') +
geom_col(alpha=0, linewidth=1.5) +
geom_errorbar(aes(ymin=LCL, ymax=UCL), color='black', width=0.1) +
geom_jitter(aes(x=cueLabel, y=accuracy), color='gray', data=inference_df, height=0.05, size=0.5) +
theme_bw() +
ylim(0, 1) +
labs(y = 'trial accuracy', title = 'choice accuracy predicted by objective cue probabilities',
subtitle = 'glm(accuracy ~ cueLabel)')
p1
p1 + p2 + plot_layout(guides='collect')
learning_df %>%
ggplot(aes(x=trial, y=zlogRT)) +
theme_bw() +
geom_point()
learning_df %>%
ggplot(aes(x=trial, y=zlogRT)) +
theme_bw() +
geom_point() +
facet_grid(~ cueLabel)
cor(learning_df$trial, learning_df$cueLabel)
learning_df %>%
group_by(cueLabel) %>%
cor(trial, zlogRT)
learning_files = list.files('../../data', full.names = TRUE, pattern='block1_learning.csv', recursive = T)
learning_keep_idx <- grep('excluded', learning_files, invert=T)
learning_keep_idx <- learning_keep_idx[1:14]
learning_df = do.call(rbind, lapply(learning_files[learning_keep_idx], function(x) { read.csv(x, header = TRUE)} ))
# transform RTs
learning_df <- learning_df %>%
group_by(subID) %>%
mutate(logRT = log(RT),
zlogRT = scale(logRT),
cueLabel = factor(cueIdx, levels=c(3,1,2), labels=c('50% A/B', '80% A', '80% B')))
learning_df %>%
group_by(cueLabel) %>%
cor(trial, zlogRT)
learning_df %>%
group_by(cueLabel) %>%
cor(trial, RT)
?cor
learning_df %>%
group_by(cueLabel) %>%
cor(trial, zlogRT, use='na.or.complete')
learning_df %>%
group_by(cueLabel) %>%
summarise(r=cor(trial, zlogRT, use='na.or.complete'))
learning_df %>%
group_by(cueLabel) %>%
summarise(correlation=cor(trial, zlogRT, use='na.or.complete'))
learning_df %>%
group_by(cueLabel) %>%
summarise(zlogRT_cor=cor(trial, zlogRT, use='na.or.complete'))
learning_df %>%
filter(trial > 60) %>%
group_by(cueLabel) %>%
summarize(zlogRT_cor=cor(trial, zlogRT))
learning_df %>%
filter(trial > 60) %>%
group_by(cueLabel) %>%
summarize(zlogRT_cor=cor(trial, zlogRT, use='na.or.complete'))
learning_df %>%
group_by(cueLabel) %>%
summarise(zlogRT_cor=cor(trial, zlogRT, use='na.or.complete'))
learning_df %>%
filter(trial > 60) %>%
group_by(cueLabel) %>%
summarize(zlogRT_cor=cor(trial, zlogRT, use='na.or.complete'))
learning_df %>%
ggplot(aes(x=trial, y=zlogRT)) +
theme_bw() +
geom_point() +
facet_grid(~ cueLabel)
kable(calibrated_coherence)
knitr::include_graphics("../../imageGrid.png")
learning_df %>%
group_by(cueLabel) %>%
summarise(zlogRT_cor=cor(trial, zlogRT, use='na.or.complete'))
# plot correlations
learning_df %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete'))
# plot correlations
learning_df %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y))
# plot correlations
learning_df %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y)) +
theme_bw() + geom_col()
?seq_along
seq_along(learning_df$trial)
# plot correlations over the course of learning
learning_df %>%
mutate(bin = seq_along(trial, 5)) %>%
group_by(cueLabel, bin) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete'))
# plot correlations over the course of learning
learning_df %>%
mutate(bin = seq_along(trial, by=5)) %>%
group_by(cueLabel, bin) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete'))
# plot correlations over the course of learning
learning_df %>%
mutate(bin = seq_along(trial)) %>%
group_by(cueLabel, bin) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete'))
# plot correlations over the course of learning
learning_df %>%
mutate(bin = seq_along(trial)) %>%
group_by(cueLabel, bin) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete'))
# plot correlations over the course of learning
learning_df %>%
filter(trial < 75/2)
# plot correlations over the course of learning
learning_df %>%
filter(trial < 75/2) %>%
group_by(cueLabel, bin) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete'))
# plot correlations over the course of learning
learning_df %>%
filter(trial < 75/2) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete'))
# plot correlations over the course of learning
learning_df %>%
filter(trial < 75/2) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel))
# plot correlations over the course of learning
learning_df %>%
filter(trial < 75/2) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel)) +
geom_bar()
# plot correlations over the course of learning
learning_df %>%
filter(trial < 75/2) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel)) +
geom_col()
# plot correlations over the course of learning
learning_df %>%
filter(trial < 75/2) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel, fill = cueLabel)) +
geom_col()
75/2
median(1:75)
labs(title = 'first half of learning trials', y='correlation coefficient')
ggplot(aes(cueLabel, y, color=cueLabel, fill = cueLabel)) +
geom_col()
geom_col() +
labs(title = 'first half of learning trials', y='correlation coefficient')
learning_df %>%
filter(trial < 38 %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel, fill = cueLabel))
# plot correlations over the course of learning
learning_df %>%
learning_df %>%
filter(trial < 38) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete'))
# plot correlations over the course of learning
learning_df %>%
filter(trial < 38) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel, fill = cueLabel)) +
geom_col() +
labs(title = 'first half of learning trials', y='correlation coefficient')
# plot correlations over the course of learning
learning_df %>%
filter(trial < 38) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel, fill = cueLabel)) +
geom_col() +
theme_bw() +
labs(title = 'first half of learning trials', y='correlation coefficient')
# plot correlations over the course of learning
learning_df %>%
filter(trial < 38) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel, fill = cueLabel)) +
geom_col() +
theme_bw() + scale_y_continuous(n.breaks=5)
# plot correlations over the course of learning
learning_df %>%
filter(trial < 38) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel, fill = cueLabel)) +
geom_col() +
theme_bw() + scale_y_continuous(n.breaks=5) +
labs(title = 'first half of learning trials', y='correlation coefficient')
# plot correlations over the course of learning
learning_df %>%
filter(trial < 38) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel, fill = cueLabel)) +
geom_col() +
theme_bw() + scale_y_continuous(n.breaks=6) +
labs(title = 'first half of learning trials', y='correlation coefficient')
# plot correlations over the course of learning
learning_df %>%
filter(trial < 38) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel, fill = cueLabel)) +
geom_col() +
theme_bw() + scale_y_continuous(n.breaks=7) +
labs(title = 'first half of learning trials', y='correlation coefficient')
learning_df %>%
filter(trial > 38) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel, fill = cueLabel)) +
geom_col() +
theme_bw() + scale_y_continuous(n.breaks=7) +
labs(title = 'second half of learning trials', y='correlation coefficient')
# plot correlations over the course of learning
learning_df %>%
filter(trial < 38) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel, fill = cueLabel)) +
geom_col() + geom_hline(yintercept=0) +
theme_bw() + scale_y_continuous(n.breaks=7) +
labs(title = 'first half of learning trials', y='correlation coefficient')
learning_df %>%
filter(trial > 38) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel, fill = cueLabel)) +
geom_col() + geom_hline(yintercept = 0) +
theme_bw() + scale_y_continuous(n.breaks=7) +
labs(title = 'second half of learning trials', y='correlation coefficient')
# plot group regressions
learning_df %>%
filter(trial < 38) %>%
ggplot(aes(x=trial, y=zlogRT, color=cueLabel)) +
theme_bw() +
facet_wrap(~ cueLabel) +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(alpha=0.25, size=1) +
geom_smooth(method = 'lm', linewidth=1.5) +
labs(title = 'group summary', subtitle = 'zlogRT ~ cueIdx + trial')
learning_df %>%
filter(trial > 38) %>%
ggplot(aes(x=trial, y=zlogRT, color=cueLabel)) +
theme_bw() +
facet_wrap(~ cueLabel) +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(alpha=0.25, size=1) +
geom_smooth(method = 'lm', linewidth=1.5) +
labs(title = 'group summary', subtitle = 'zlogRT ~ cueIdx + trial')
# plot group regressions
reg1 <- learning_df %>%
filter(trial < 38) %>%
ggplot(aes(x=trial, y=zlogRT, color=cueLabel)) +
theme_bw() +
facet_wrap(~ cueLabel) +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(alpha=0.25, size=1) +
geom_smooth(method = 'lm', linewidth=1.5) +
labs(title = 'group summary', subtitle = 'zlogRT ~ cueIdx + trial')
reg2 <- learning_df %>%
filter(trial > 38) %>%
ggplot(aes(x=trial, y=zlogRT, color=cueLabel)) +
theme_bw() +
facet_wrap(~ cueLabel) +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(alpha=0.25, size=1) +
geom_smooth(method = 'lm', linewidth=1.5) +
labs(title = 'group summary', subtitle = 'zlogRT ~ cueIdx + trial')
# plot correlations
cor1 <- learning_df %>%
filter(trial < 38) %>%
ggplot(aes(x=trial, y=zlogRT, color=cueLabel))
cor1
# plot correlations
learning_df %>%
filter(trial < 38) %>%
ggplot(aes(x=trial, y=zlogRT, color=cueLabel)) +
theme_bw() + geom_point()
# plot correlations
learning_df %>%
filter(trial < 38) %>%
ggplot(aes(x=trial, y=zlogRT, color=cueLabel)) +
theme_bw() + facet_wrap(~ cueLabel) +
geom_point()
bar2
bar2 <- learning_df %>%
filter(trial > 38) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel, fill = cueLabel)) +
geom_col() + geom_hline(yintercept = 0) +
theme_bw() + scale_y_continuous(n.breaks=7) +
labs(title = 'second half of learning trials', y='correlation coefficient')
bar2
learning_df %>%
filter(trial > 38) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel, fill = cueLabel)) +
geom_col() + geom_hline(yintercept = 0) +
theme_bw() + scale_y_continuous(n.breaks=8) +
labs(title = 'second half of learning trials', y='correlation coefficient')
learning_df %>%
filter(trial > 38) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel, fill = cueLabel)) +
geom_col() + geom_hline(yintercept = 0) +
theme_bw() + scale_y_continuous(n.breaks=10) +
labs(title = 'second half of learning trials', y='correlation coefficient')
bar2 <- learning_df %>%
filter(trial > 38) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel, fill = cueLabel)) +
geom_col() + geom_hline(yintercept = 0) +
theme_bw() + ylim(-0.1, 0.35) +
labs(title = 'second half of learning trials', y='correlation coefficient')
bar2
# plot correlation coefficients over the course of learning
bar1 <- learning_df %>%
filter(trial < 38) %>%
group_by(cueLabel) %>%
summarise(y=cor(trial, zlogRT, use='na.or.complete')) %>%
ggplot(aes(cueLabel, y, color=cueLabel, fill = cueLabel)) +
geom_col() + geom_hline(yintercept=0) +
theme_bw() + ylim(-0.1, 0.35) +
labs(title = 'first half of learning trials', y='correlation coefficient')
bar1
